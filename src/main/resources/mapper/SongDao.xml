<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.music.dao.SongDao">

    <resultMap type="com.music.entity.Song" id="SongMap">
        <result property="id" column="id" jdbcType="OTHER"/>
        <result property="singerId" column="singer_id" jdbcType="OTHER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="introduction" column="introduction" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="pic" column="pic" jdbcType="VARCHAR"/>
        <result property="lyric" column="lyric" jdbcType="VARCHAR"/>
        <result property="url" column="url" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="SongMap">
        select
          id, singer_id, name, introduction, create_time, update_time, pic, lyric, url
        from linger_music.song
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="SongMap">
        select
          id, singer_id, name, introduction, create_time, update_time, pic, lyric, url
        from linger_music.song
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="SongMap">
        select
          id, singer_id, name, introduction, create_time, update_time, pic, lyric, url
        from linger_music.song
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="singerId != null">
                and singer_id = #{singerId}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="introduction != null and introduction != ''">
                and introduction = #{introduction}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="pic != null and pic != ''">
                and pic = #{pic}
            </if>
            <if test="lyric != null and lyric != ''">
                and lyric = #{lyric}
            </if>
            <if test="url != null and url != ''">
                and url = #{url}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into linger_music.song(singer_id, name, introduction, create_time, update_time, pic, lyric, url)
        values (#{singerId}, #{name}, #{introduction}, #{createTime}, #{updateTime}, #{pic}, #{lyric}, #{url})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update linger_music.song
        <set>
            <if test="singerId != null">
                singer_id = #{singerId},
            </if>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="introduction != null and introduction != ''">
                introduction = #{introduction},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="pic != null and pic != ''">
                pic = #{pic},
            </if>
            <if test="lyric != null and lyric != ''">
                lyric = #{lyric},
            </if>
            <if test="url != null and url != ''">
                url = #{url},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from linger_music.song where id = #{id}
    </delete>
    <!--通过模糊查询查询歌曲-->
    <select id="findSongByLike" resultMap="SongMap">
        select * from linger_music.song where name like "%"#{name}"%"
    </select>
</mapper>